version: '3.8'

services:
  app:
    build: .
    container_name: ai-challenge-backend
    ports:
      - "8080:8080"
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      # Spring Boot DevTools가 원격 클라이언트에서도 재시작을 허용하도록 설정
      - SPRING_PROFILES_ACTIVE=dev # 개발 프로파일 활성화
      - SPRING_DEVTOOLS_REMOTE_SECRET=your_super_secret_key
      - SPRING_DEVTOOLS_REMOTE_DEBUG_ENABLED=true
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - /home/pswaao/Desktop/project/AI-challenge/document-upload:/app/document-upload # 기존 파일 업로드 볼륨
      - ./:/app # <-- 이 라인 추가: 호스트의 백엔드 소스 코드를 컨테이너의 /app에 마운트
    networks:
      - ai-challenge-network # 네트워크 정의 추가 (아직 없으면 아래 networks 섹션도 확인)

  db: # 데이터베이스 서비스
    image: mysql:8.0
    container_name: ai-challenge-db # 컨테이너 이름 추가 (선택 사항이지만 명확성을 위해)
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=ai_challenge_db
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u $$MYSQL_USER -p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - ai-challenge-network # 네트워크 정의 추가

volumes:
  mysql-data:

networks:
  ai-challenge-network:
    driver: bridge
